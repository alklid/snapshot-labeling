plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.alklid.batch'
version = "${BUILD_VERSION}"

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

sourceSets {
    if (!project.hasProperty('CONFIG_NAME') || !CONFIG_NAME) {
        ext.CONFIG_NAME = 'local'
    }

    generated {
        java {
            srcDirs =  [ "src/main/generated"]
        }
    }

    main {
        java { srcDirs "src/main/java" }
        resources {
            srcDirs "src/main/resources", "src/main/resources-env/${CONFIG_NAME}"
        }
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    filesMatching([
            'application.yml',
            'application-*.yml'
    ]) {
        expand(project.properties)
    }
}

dependencies {
    // spring batch
    implementation('org.springframework.boot:spring-boot-starter-batch')

    // jdbc
    implementation('com.h2database:h2')

    // lombok
    compileOnly ('org.projectlombok:lombok')
    annotationProcessor ('org.projectlombok:lombok')
    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')

    // util
    implementation('org.apache.commons:commons-lang3')
    implementation('commons-io:commons-io:2.16.1')
    implementation('org.apache.commons:commons-imaging:1.0.0-alpha5')
    implementation('com.drewnoakes:metadata-extractor:2.19.0')

    // sentry
    implementation('io.sentry:sentry-spring-boot-starter-jakarta:7.9.0')
    implementation('io.sentry:sentry-logback:7.9.0')

    // test
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.batch:spring-batch-test')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

jar {
    enabled true
}
